function QBRinitdrawing31(type, areaindex) {
    let timeout = 1500;  
    if (type == 'quote') { timeout = 1200; }
    setTimeout(function () {
        //let areaindex = getareaindex();
       initdrawingcontrols();       
        if (type == 'quote') {
            initquotearea(areaindex);
        } else if (type == 'draw') {
            initdrawarea(areaindex);          
            $("#overlay").hide();
        } else if (type == 'print') {
            initprintarea();
        }
        //hideloadingspinners();
       // console.log(type, source);
    }, timeout);
}
function QBRinitLayout31(index) {    
    setTimeout(function () {
        initmaterial31(index);
    }, 1000);
}
function QBRinitPrintLayout31() {
    setTimeout(function () {
        layoutmode = 2;//print layout
        let tmpmaterials = getversionmaterials();
        for (let i = 0; i < tmpmaterials.length; i++) {
            initmaterial31(i);
        }                   
        msvg.style("display", "none");
    }, 1000);
}

function QBRupdatecountertype31(part, ctype, ctypeid, sindex) {
    //let pshape = parsepartshape(part.Shape);
    //for (let i = 0; i < pshape.sides.length; i++) {
    //    let side = pshape.sides[i];
    //    if (side.sindex == sindex) {
    //        side.stype = ctype;
    //        side.stypeid = ctypeid;
    //    }
    //}
    //part.Shape = jasonpartshape(pshape);
}
function QBRupdateedge31(part, etype, etypeid, prevtype, prevtypeid) {
    //let pshape = parsepartshape(part.Shape);
    //for (let i = 0; i < pshape.sides.length; i++) {
    //    let side = pshape.sides[i];
    //    updateedge31(side.edges, etype, etypeid, prevtype, prevtypeid);
    //}
    //part.Shape = jasonpartshape(pshape);
}
function QBRupdatesplash31(part, stype, height, prevtype, prevheight) {
    //let pshape = parsepartshape(part.Shape);
    //for (let i = 0; i < pshape.sides.length; i++) {
    //    let side = pshape.sides[i];
    //    updatesplash31(side.splashs, stype, height, prevtype, prevheight);
    //}
    //part.Shape = jasonpartshape(pshape);
}
function QBRupdatecutout31(part, ctype, ctypeid, shapeindex, index, sideindex) {
    //let pshape = parsepartshape(part.Shape);
    //for (let i = 0; i < pshape.sides.length; i++) {
    //    let side = pshape.sides[i];
    //    updatecutout31(side.cutouts, ctype, ctypeid, shapeindex, index, sideindex);
    //}
    //part.Shape = jasonpartshape(pshape);
}

function updateedge31(sideedges, etype, etypeid, prevtype, prevtypeid) {
    for (let j = 0; j < sideedges.length; j++) {
        let sedge = sideedges[j];
        let desc = "", typeid = sedge.typeid;
        if (prevtype == 'Finished Edge') { desc = 'F'; } else if (prevtype == 'Appliance Edge') { desc = 'A'; }
        if (sedge.typeid > 0 && sedge.typeid == prevtypeid) {
            typeid = etypeid;
        } else if (sedge.type == desc) {
            typeid = etypeid;
        }
        sedge.typeid = typeid;
    }
}
function updatesplash31(splashs, stype, height, prevtype, prevheight) {
    for (let j = 0; j < splashs.length; j++) {
        let splash = splashs[j];
        if (splash.height == prevheight) {
            splash.height = height;
        }
    }
}
function updatecutout31(cutouts, ctype, ctypeid, shapeindex, index, sideindex) {
    for (let j = 0; j < cutouts.length; j++) {
        let cutout = cutouts[j];
        if (cutout.shapeindex == shapeindex && cutout.index == index && cutout.sideindex == sideindex) {
            cutout.Type = ctype;
            cutout.TypeID = ctypeid;
        }
    }
}
function ActionUpdateShapesZoom(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onupdatepartshapeszoom32(source);
        });
    });
}
function ActionShape(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionUpdateShape(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onupdatepartshape31(source);
        });
    });
}
function ActionRotateShape(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onupdatepartshape31(source);
        });
    });
}
function ActionDuplicateShape(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
            resetareapartssrno();
            redrawareashapes();
        });
    });
}
function ActionSelectPart(partsrno) {
    setTimeout(function () {
       // _qscope.$apply(function () {
            selectpartbysrno(partsrno);
       // });
    });
}
function ActionUndoRedoDrawShape(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onpartshapeactive31(source);
            redrawareashapes();
        });
    });
}
function ActionShapeRemove(index, source) {  
    setTimeout(function () {
        _qscope.$apply(function () {
            onpartshaperemove31(index, source);
            redrawareashapes();
        });
    });
}
function ActionSideShape(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionSplash(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionApron(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionCorner(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionEdge(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionCutout(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartshape31(source);
        });
    });
}
function ActionSinkCutout(sinkId, source) {
    if (sinkId != undefined) {
        setTimeout(function () {
            _qscope.$apply(function () {
                onaddpartsinkcutout31(sinkId, source);
            });
        });
    }
}
function ActionAddSeam(index, sideindex, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartseam31(index, sideindex, source);
            onaddslabpartseam32(index, sideindex, source);
        });
    });
}
function ActionUpdateSeam(index, sideindex, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onupdatepartseam31(index, sideindex, source);
        });
    });
}
function ActionDeleteSeam(spseamindex, spsideindex, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            ondeletepartseam31(spseamindex, spsideindex, source);
        });
    });
}
function ActionSeamSlabpart(spseamindex, spsideindex, partshape, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            setpartshapeseamslabpart31(spseamindex, spsideindex, partshape, source);
        });
    });
}
function ActionSlabPart(source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            setpartshapeslabpart31(source);
        });
    });
}
function ActionDeleteSlabpart31(index, sideindex) {
    setTimeout(function () {
        _qscope.$apply(function () {
            ondeletepartslabpart31('ActionDeleteSlabpart31');
            ondeleteslabpart31(index);
        });
    });
}
function ActionSlabSplash31(source) {   
    setTimeout(function () {
        _qscope.$apply(function () {
            setpartshapeslabsplash31(source);
        });
    });
}
function ActionSlabSplashSeam31(index, splashindex, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onaddpartsplashseam31(index, splashindex, source);
        });
    });
}
function ActionUpdateSlabSplashSeam31(index, sideindex, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onupdatepartsplashseam31(index, sideindex, source);
        });
    });
}
function ActionSeamSlabSplash31(index, sideindex, source) {
    setTimeout(function () {
        _qscope.$apply(function () {
            onseampartsplash31(index, sideindex, source);
        });
    });
}

