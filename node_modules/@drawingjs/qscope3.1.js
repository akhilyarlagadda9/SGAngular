/*scope functions*/
var _qscope;
function setviewtype() {

}
function setviewtypeid(typeid) {
    _qscope.viewtypeid = typeid;
}
function getmetrictypeid() {
    return _qscope.quote.header.Version.IsMetricMode;
}
function getviewtypeid() {
    return _qscope.viewtypeid;
}
function getprojecttypeid() {
    return _qscope.quote.header.Version.CustTypeID;
}
function getquoteid() {
    return _qscope.quote.header.ID;
}
function getquoteno() {
    return _qscope.quote.header.QuoteNo;
}
function getquotename() {
    return _qscope.quote.header.QuoteName;
}
function getversion() {
    return _qscope.quote.header.Version;
}
function getversionid() {
    return _qscope.quote.header.Version.ID;
}
function getcoid() {
    let coid = _qscope.quote.header.Version.LatestCoID;
    if (coid == undefined) { coid = 0; }
    return coid;
}
function getcosrno() {
    return _qscope.quote.header.Version.LatestCoSrNo;
}
function setcoid(coid) {
    _qscope.quote.header.Version.LatestCoID = coid;
}
function setcosrno(cosrno) {
    _qscope.quote.header.Version.LatestCoSrNo = cosrno;
}
function getphaseid() {
    return _qscope.quote.phaseId;
}
function getphaseno() {
    return _qscope.quote.PhaseSrNo;
}
function getisparttemplate() {
    return _qscope.IsParttemplate;
}
function setisparttemplate(temp) {
    _qscope.IsParttemplate = temp;
}
function getpricelistid() {
    let plistid = _qscope.quote.header.Version.PriceListID;
    let firstplistid = plistid.split(',');
    return firstplistid[0];
}
function getprodustiontypeId() {
    return _qscope.quote.header.Version.JobTypeID;
}
function getproductiontypescope() {
    return _qscope.quote.header.Version.CustTypeList;
}

/*tax percentage*/
function getversiontaxval() {
    return _qscope.quote.header.Version.Tax;
}
function gettaxpercent() {
    return _qscope.quote.header.Version.GradePercent;
}
function getmattaxpercent() {
    return _qscope.quote.header.Version.MatPercent;
}
function getfabtaxpercent() {
    return _qscope.quote.header.Version.FabPercent;
}
function getsinktaxpercent() {
    return _qscope.quote.header.Version.AddonPercent;
}
function getfaucettaxpercent() {
    return _qscope.quote.header.Version.FaucetPercent;
}
function getlabortaxpercent() {
    return _qscope.quote.header.Version.LaborPercent;
}
function getaddontaxpercent() {
    return _qscope.quote.header.Version.OtherPercent;
}
function gettiletaxpercent() {
    return _qscope.quote.header.Version.TilePercent;
}
function getcabinettaxpercent() {
    return _qscope.quote.header.Version.CabinetPercent;
}
function getcarpettaxpercent() {
    return _qscope.quote.header.Version.CarpetPercent;
}
function getfloortaxpercent() {
    return _qscope.quote.header.Version.FloorPercent;
}
function getconsumabletaxpercent() {
    return _qscope.quote.header.Version.ConsumablePercent;
}
function getappliancetaxpercent() {
    return _qscope.quote.header.Version.AppliancePercent;
}
function gettooltaxpercent() {
    return _qscope.quote.header.Version.ToolPercent;
}

/*area*/
function getareaindex() {
    return _qscope.quote.areaIndex;
}
function getareabyindex(index) {
    return _qscope.quote.header.Version.AreaList[index];
}
function getversionareas() {
    return _qscope.quote.header.Version.AreaList;
}
function getdefaultarea() {
    return _qscope.area;
}
function setareaindex(index) {
    _qscope.quote.areaIndex = index;
}
function setversionareas(areas) {
    _qscope.quote.header.Version.AreaList = areas;
}
function setdefaultarea(area) {
    _qscope.area = area;
}
function setversionarealist(arealist) {
    _qscope.quote.header.Version.AreaList = arealist;
}
function setareasaveflag(area) {
    area.SaveFlag = 1;
}


/*materials*/
function getversionmaterials() {
    return _qscope.quote.header.Version.MaterialList;
}
function getunassignedmaterials() {
    return _qscope.quote.header.Version.AreaUnassignedMaterialList;
}
function setversionmaterials(materials) {
    _qscope.quote.header.Version.MaterialList = materials;
}

/*pricebook*/
function getdiscountstypes() {    
    return _qscope.DiscountTypeList;
}
function setqscopepricebook(pricebook) {
    _qscope.pricebook = pricebook;
}
function getqscopepricebook() {
    return _qscope.pricebook;
}
function setqscopechecklist(checklist) {
    _qscope.checklist = checklist;
}
function getqscopechecklist() {
    return _qscope.checklist;
}


function selectpartbysrno(partsrno) {
    _qscope.selectedPartSrNo = partsrno;
}
function setpartsaveflag(part) {
    part.SaveFlag = 1;
}

function getchangeflag() {
    return chgflag;
    return _qscope.chgflag;
}
function setchangeflag() {
    chgflag = 1;
    //_qscope.chgflag = 1;
}
function setdrawmode(mode) {
    _qscope.mode = mode;
}
function getdrawmode() {
    return _qscope.mode;
}
function setdrawtoolstab(qtab) {
    _qscope.qtab = qtab;
}
function setjobscopetypeid(typeid) {
    _qscope.jobscopetypeid = typeid;
}
function getjobscopetypeid() {
    return _qscope.jobscopetypeid;
}
function setjobscopenotes(desc) {
    _qscope.jobscopenotes = desc;
}
function getjobscopenotes() {
    return _qscope.jobscopenotes;
}