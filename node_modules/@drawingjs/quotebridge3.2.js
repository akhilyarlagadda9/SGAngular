function QBRinitdrawing31(type, areaindex) {
    let timeout = 1500;
    if (type == 'quote') { timeout = 1000; }
    setTimeout(function () {
        //let areaindex = getareaindex();
        initdrawingcontrols();
        if (type == 'quote') {
            initquotearea(areaindex);
        } else if (type == 'draw') {
            initdrawarea(areaindex);
            $("#overlay").hide();
        } else if (type == 'print') {
            initprintarea();
        }
        //hideloadingspinners(); $("#overlay").hide();
    }, timeout);
}
function QBRinitLayout31(index) {
    setTimeout(function () {
        initmaterial31(index); $("#overlay").hide();
    }, 1000);
}
function QBRinitPrintLayout31() {
    layoutmode = 2;//print layout
    //set print dg mode
    setprintdigitalmode(1);
    //initdgmatareas32('print', 'QBRinitPrintLayout31');
    initprintdgmatareas32('print', 'QBRinitPrintLayout31');
}
function QBRMaterialSlabPartsResetBounds() {
    setTimeout(function () {
        initdgmatareas32('slabpart', 'QBRMaterialSlabPartsResetBounds');
    }, 5);
}

function QBRinitdrawing33(type, source) {
    setTimeout(function () {
        let areaindex = getareaindex();
        initdrawingcontrols();
        if (type == 'quote') {
            initquotearea(areaindex);
        } else if (type == 'draw') {
            initdrawarea(areaindex);
            $("#overlay").hide();
        } else if (type == 'print') {
            initprintarea();
        } else if (type == 'editarea') {
            initquoteeditarea();
        }
        //hideloadingspinners();
    }, 1000);
}
function QBRinitLayout33(index) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            initmaterial31(index);
            initdgmatareas32('slabpart','QBRinitLayout33');
       // });
        $("#overlay").hide();
    }, 1000);
}
function QBRDrawByAreaID33(index, areaid) {
    setTimeout(function () {
        initdrawingcontrols();
        setquoteeditarea(index, areaid);
    }, 500);
}
function QBRsetlayout32(materialId) {
    let index = getmaterialindexbyid(materialId);
    //_qscope.$apply(function () {
        initmaterial31(index);
   // }, 1000);
}
function updateedge31(sideedges, etype, etypeid, prevtype, prevtypeid) {
    for (let j = 0; j < sideedges.length; j++) {
        let sedge = sideedges[j];
        let desc = "", typeid = sedge.typeid;
        if (prevtype == 'Finished Edge') { desc = 'F'; } else if (prevtype == 'Appliance Edge') { desc = 'A'; }
        if (sedge.typeid > 0 && sedge.typeid == prevtypeid) {
            typeid = etypeid;
        } else if (sedge.type == desc) {
            typeid = etypeid;
        }
        sedge.typeid = typeid;
    }
}
function updatesplash31(splashs, stype, height, prevtype, prevheight) {
    for (let j = 0; j < splashs.length; j++) {
        let splash = splashs[j];
        if (splash.height == prevheight) {
            splash.height = height;
        }
    }
}
function updatecutout31(cutouts, ctype, ctypeid, shapeindex, index, sideindex) {
    for (let j = 0; j < cutouts.length; j++) {
        let cutout = cutouts[j];
        if (cutout.shapeindex == shapeindex && cutout.index == index && cutout.sideindex == sideindex) {
            cutout.Type = ctype;
            cutout.TypeID = ctypeid;
        }
    }
}
function ActionUpdateShapesZoom(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartshapeszoom32(source);
       // });
    });
}
function ActionShape(source) {
    source += ':ActionShape';
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
            if (drawmode == 1) { setdrawmode(0); }
            //console.log(drawmode, source);
        //});
    });
}
function ActionUpdateShape(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartshape31(source);
        //});
    });
}
function ActionRotateShape(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartshape31(source);
        //});
    });
}
function ActionDuplicateShape(source, dupcount) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            let areaindex = getareaindex();
            let partlen = getpartlength(areaindex);
            for (let i = 0; i < dupcount; i++) {
                duplicateshape31(partlen + i);
                onaddpartshape31(source);
            }
            resetareapartssrno();
            redrawareashapes();
        //});
    });
}
function ActionSelectPart(partsrno) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            selectpartbysrno(partsrno);
        //});
    });
}
function ActionUndoRedoDrawShape(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onpartshapeactive31(source);
            resetareapartssrno();
            redrawareashapes();
        //});
    });
}
function ActionShapeRemove(index, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onpartshaperemove31(index, source);
            resetareapartssrno();
            redrawareashapes();
        //});
    });
}
function ActionSideShape(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
        //});
    });
}
function ActionSplash(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
        //});
    });
}
function ActionApron(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
        //});
    });
}
function ActionCorner(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
        //});
    });
}
function ActionEdge(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
        //});
    });
}
function ActionCutout(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onaddpartshape31(source);
        //});
    });
}
function ActionSinkCutout(sinkId, source) {
    if (sinkId != undefined) {
        setTimeout(function () {
           // _qscope.$apply(function () {
                onaddpartsinkcutout31(sinkId, source);
            //});
        });
    }
}
function ActionAddSeam32(index, sideindex, source) {
    setTimeout(function () {
       // _qscope.$apply(function () {
            onaddpartshapeseam32(index, sideindex, source);
            onaddslabpartseam32(index, sideindex, source);
            updatepartshapeslabparts32(shape.partsrno, shape.areaid, pshapeslabparts, source);
            // initdgmatareas32('slabpart', source);
            onsetslabpartdgshapeseam32(source);
        //});
    });
}
function ActionDragSeam32(index, sideindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartshapeseam32(index, sideindex, source);
            //ondragslabpartseam32(index, sideindex, source);
            onsetslabpartdgshapeseam32(source);
        //});
    });
}
function ActionUpdateSeam32(index, sideindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartshapeseam32(index, sideindex, source);
            onsetslabpartdgshapeseam32(source);
       //});
    });
}
function ActionDeleteSeam32(index, sideindex, startseamindex, startsideindex, sindex, type) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            let source = 'ActionDeleteSeam32';
            ondeletepartshapeseam32(index, sideindex, source);
            ondeleteslabpartseam32(index, sideindex, startseamindex, startsideindex, sindex, type, source);
            onsetslabpartdgshapeseam32(source);
       // });
    });
}
function ActionSeamSlabpart32(index, sideindex, startseamindex, startsideindex, seamtype) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            let source = 'ActionSeamSlabpart32';
            onseamslabpart32(index, sideindex, startseamindex, startsideindex, seamtype, source);
            onseampartshape32(index, sideindex, startseamindex, startsideindex, seamtype, source);
            onsetslabpartdgshapeseam32(source);
        //});
    });
}
function ActionUpdateSlabPart32(partsrno, areaid, npshapeslabparts, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            updatepartshapeslabparts32(partsrno, areaid, npshapeslabparts, source);
       // });
    });
}
function ActionDragRotateSlabPart32(partsrno, areaid, npshapeslabparts, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            updatepartshapeslabparts32(shape.partsrno, shape.areaid, pshapeslabparts, source);
        //});
    });
}
function ActionSlabPart(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            setpartshapeslabpart31(source);
        //});
    });
}
function ActionDeleteSlabpart32(index, sideindex, spindex, startseamindex, startsideindex) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            let source = 'ActionDeleteSlabpart31';
            onunseampartshape32(index, sideindex, spindex, startseamindex, startsideindex, source);
            ondeleteslabpart32(index, sideindex, spindex, startseamindex, startsideindex, source);
            updatepartshapeslabparts32(shape.partsrno, shape.areaid, pshapeslabparts, source);
        //});
    });
}
function ActionSlabSplash31(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            setpartshapeslabsplash31(source);
        //});
    });
}
function ActionUpdateSlabSplash32(npshapeslabsplashs, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            updatepartshapeslabsplashs32(shapeslabsplash.partsrno, shapeslabsplash.areaid, npshapeslabsplashs, source);
        //});
    });
}
function ActionAddSlabSplashSeam32(index, spseamindex, splashindex, source) {
    setTimeout(function () {
       // _qscope.$apply(function () {
            onaddpartshapesplashseam32(index, spseamindex, splashindex, source);
            onaddslabsplashseam32(index, splashindex, source);
            updatepartshapeslabsplashs32(shapeslabsplash.partsrno, shapeslabsplash.areaid, pshapeslabsplashs, source);
       // });
    });
}
function ActionDragSlabSplashSeam32(index, spseamindex, splashindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartshapesplashseam32(index, spseamindex, splashindex, source);
            //ondragslabsplashseam32(index, splashindex, source);
            onsetslabpartdgshapeseam32(source);
       // });
    });
}
function ActionSeamSlabSplash32(index, spseamindex, splashindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            let source = 'ActionSeamSlabSplash32';
            onseamslabsplash32(index, spseamindex, splashindex, source);
            onseampartshapesplash32(index, spseamindex, splashindex, source);
            // onsetslabpartdgshapeseam32(source);
       // });
    });
}
function ActionDeleteSlabSplashSeam32(index, spseamindex, splashindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            source += ":" +  'ActionDeleteSlabSplashSeam32';
            ondeletepartshapesplashseam32(index, spseamindex, splashindex, source);
            ondeleteslabsplashseam32(index, splashindex, source);
            //  onsetslabpartdgshapeseam32(source);
        //});
    });
}
function ActionDeleteSlabSplash32(index, splashindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            //deleteslabsplashshapes32();
            onunseampartshapesplash32(index, splashindex, source);
            ondeleteslabsplash32(index, splashindex, source);
            updatepartshapeslabsplashs32(shapeslabsplash.partsrno, shapeslabsplash.areaid, pshapeslabsplashs, source);
       // });
    });
}
function ActionSlabSplashSeam31(index, splashindex, source) {
    setTimeout(function () {
       // _qscope.$apply(function () {
            onaddpartsplashseam31(index, splashindex, source);
       // });
    });
}
function ActionUpdateSlabSplashSeam31(index, sideindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatepartsplashseam31(index, sideindex, source);
        //});
    });
}
function ActionSeamSlabSplash31(index, sideindex, source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onseampartsplash31(index, sideindex, source);
        //});
    });
}
function ActionUpdateAreaLabels(source) {
    setTimeout(function () {
        //_qscope.$apply(function () {
            onupdatearealabels(source);
       // });
    });
}
function ActionUploadSlabImage34(index, slabid, source) {
    setTimeout(function () {
        _qscope.ActionMaterialSlabInfo(1, index, materialid);
    });
}