function removesidesplashseams32(index, sideindex) {
    let side = shape.sides[sideindex];
    let splash = side.splashs[index];
    for (let i = 0; i < splash.seams.length; i++) {               
        removesidesplashseam(i, index, sideindex);       
    }
}
function removesidesplashseam(index, splashindex, sideindex) {
    let seamindex = shape.index + "" + sideindex + "" + splashindex + "" + index;
    let splashseamg = seamsg.select("#" + shape.mode + "splashseamg" + seamindex);
    splashseamg.remove();
}
function setsidesplashseams32(index, sideindex) {
    let side = shape.sides[sideindex];
    let splash = side.splashs[index];
    for (let i = 0; i < splash.seams.length; i++) {
        if (splash.seams[i].isactive == 1) { setsplashseam32(splash.seams[i]); }
    }
}
function drawsidesplashseams31(index, sideindex) {
    let side = shape.sides[sideindex];
    let splash = side.splashs[index];
    for (let i = 0; i < splash.seams.length; i++) {
        if (splash.seams[i] != null && splash.seams[i].isactive == 1) { drawshapesidesplashseam(i, index, sideindex, splash.sidecode); }
    }
}
function drawshapesidesplashseam(index, splashindex, sideindex, sidecode) {
    //console.log(index, splashindex, sideindex, sidecode);
    let side = shape.sides[sideindex];
    let splash = side.splashs[splashindex];
    let splashseam = splash.seams[index];    
    if (splashseam != undefined) {
        let smtype = splashseam.type, x = splashseam.x, y = splashseam.y, h = splashseam.h, x1 = 0, y1 = 0, x2 = 0, y2 = 0;        
        let x11 = splash.x11, y11 = splash.y11, x12 = splash.x12, y12 = splash.y12, x21 = splash.x21, y21 = splash.y21, x22 = splash.x22, y22 = splash.y22;
        let mx1 = 0, my1 = 0, mx2 = 0, my2 = 0, mtext = '', mtx = 0, mty = 0, dw = 5;
        let npt1 = calcverticalvectorpoint(x11, y11, x12, y12, x, y); //first point on line
        x1 = npt1.dx, y1 = npt1.dy;        
        if (shape.mode != 'slabpart' && splashmode == 2) {
            let spldh = applymminchfact(splashminh, 1, 2);
            let npt = offsetline(x11, y11, x12, y12, spldh);
            x21 = npt.dx1, y21 = npt.dy1, x22 = npt.dx2, y22 = npt.dy2;
        }
        let npt2 = calcverticalvectorpoint(x21, y21, x22, y22, x1, y1);//second point on line
        x2 = npt2.dx, y2 = npt2.dy;
        mx1 = x11, my1 = y11, mx2 = x1; my2 = y1, mtx = x2 + dw, mty = y2 - dw;
        sw = applymminchfact(calchyplen(mx1, my1, mx2, my2), 2, 2);
        drawsplashseamline(index, splashindex, sideindex, sidecode, x1, y1, x2, y2);
        drawsplashseammarkerline(index, splashindex, sideindex, sidecode, mx1, my1, mx2, my2, mtx, mty, sw);
    }    
}
function drawsplashseamline(index, splashindex, sideindex, sidecode, x1, y1, x2, y2) {
    let eclass = "shapeseam";
    let seamindex = shape.index + "" + sideindex + "" + splashindex + "" + index;    
    let splashseamg = seamsg.select("#" + shape.mode + "splashseamg" + seamindex);
    if (splashseamg.empty()) { splashseamg = seamsg.append("g").attr("id", shape.mode + "splashseamg" + seamindex); }
    let seamline = splashseamg.select("#splashseam" + sideindex);
    if (seamline.empty()) { seamline = splashseamg.append("line").attr("id", "splashseam" + sideindex); }
    seamline.attr("x1", x1).attr("y1", y1).attr("x2", x2).attr("y2", y2).attr("class", eclass).attr("index", index).attr("splashindex", splashindex)
    .attr("sideindex", sideindex).attr("sidecode", sidecode).attr("sindex", shape.index).attr("smode", shape.mode);
}
function drawsplashseammarkerline(index, splashindex, sideindex, sidecode, x1, y1, x2, y2, mtx, mty, mtext) {
    let seamindex = shape.index + "" + sideindex + "" + splashindex + "" + index;
    let splashseamg = seamsg.select("#" + shape.mode + "splashseamg" + seamindex);
    let splashseammarkerg = splashseamg.select("#smarkerg" + seamindex);
    if (splashseammarkerg.empty()) { splashseammarkerg = splashseamg.append("g").attr("id", "smarkerg" + seamindex); }
    if (!splashseammarkerg.empty()) {
        splashseammarkerg.attr("index", index).attr("splashindex", splashindex).attr("sideindex", sideindex).attr("sidecode", sidecode).attr("sindex", shape.index).attr("smode", shape.mode);
        //let markerline = splashseammarkerg.select("#msline" + seamindex);
        //if (markerline.empty()) { markerline = splashseammarkerg.append("line").attr("id", "msline" + seamindex); }
        //let arrowstart = shape.mode == 'print' ? "url(#printtriangle-start)" : "url(#triangle-start)";
        //let arrowend = shape.mode == 'print' ? "url(#printtriangle-end)" : "url(#triangle-end)";
        //markerline.attr("x1", x1).attr("y1", y1).attr("x2", x2).attr("y2", y2).attr("class", "cutoutarrow").attr("marker-start", arrowstart).attr("marker-end", arrowend);
        let smarkertext = splashseammarkerg.select("#mstext" + seamindex);
        if (smarkertext.empty()) { smarkertext = splashseammarkerg.append("text").attr("id", "mstext" + seamindex); }
        smarkertext.attr("x", mtx).attr("y", mty).text(mtext);
        smarkertext.attr("style", "fill:red;fill-opacity:0.3;");
        splashseammarkerg.style("opacity", "1");
    }
}
